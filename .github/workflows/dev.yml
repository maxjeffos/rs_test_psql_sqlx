name: Dev

on: 
  push

env:
  CARGO_TERM_COLOR: always

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Show Rust environment
      run: |
        cargo version
        rustup show

    - name: Show psql client
      run: psql --version

    - name: View cargo bin dir
      run: ls -la ~/.cargo/bin/

    - uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: View cargo bin dir
      run: ls -la ~/.cargo/bin/

    - name: Install sqlx
      run: cargo install --locked sqlx-cli --no-default-features --features rustls,postgres,sqlite || true

    - name: Init DB with Docker and Script
      run: ./scripts/init_db.sh

    - name: Show files after running DB script
      run: ls -la

    - name: Show files after running DB script
      run: |
        ls -la migrations
        cat migrations/*

    - name: Run format check
      run: cargo fmt -- --check
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
      
    - name: Run lint check
      run: cargo clippy
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}

    - name: Cargo Check
      run: cargo check
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
      
    - name: Cargo Build
      run: cargo build
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}

    - name: Cargo Test
      run: cargo test
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}

    - name: Cargo Run
      run: cargo run
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
